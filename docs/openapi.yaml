openapi: 3.0.3
info:
  title: ReelSpeed Backend API
  description: |
    Comprehensive API for ReelSpeed - AI-powered viral video generation platform.
    
    ## Features
    - üéôÔ∏è ElevenLabs voice generation
    - üìπ Video processing and generation
    - üîí JWT authentication
    - üì± Multi-platform content optimization
    - üöÄ S3/R2 asset management
    - üìä Analytics and performance tracking
    
    ## Authentication
    Most endpoints require JWT authentication via `Authorization: Bearer <token>` header.
    
    ## Base URL
    - Development: `http://localhost:3000`
    - Production: `https://api.reelspeed.ai`
  version: 1.0.0
  contact:
    name: ReelSpeed API Support
    url: https://reelspeed.ai/support
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000
    description: Development server
  - url: https://api.reelspeed.ai
    description: Production server

security:
  - BearerAuth: []

paths:
  # ========================
  # Authentication Routes
  # ========================
  /api/auth/register:
    post:
      tags: [Authentication]
      summary: Register new user
      description: Create a new user account with email and password
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password, firstName, lastName]
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  minLength: 8
                  example: SecurePass123!
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          description: User already exists

  /api/auth/login:
    post:
      tags: [Authentication]
      summary: Login user
      description: Authenticate user and return JWT tokens
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials

  /api/auth/refresh:
    post:
      tags: [Authentication]
      summary: Refresh access token
      description: Get new access token using refresh token
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [refreshToken]
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'

  /api/auth/me:
    get:
      tags: [Authentication]
      summary: Get current user profile
      description: Retrieve authenticated user's profile information
      responses:
        '200':
          description: User profile retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

  /api/auth/profile:
    patch:
      tags: [Authentication]
      summary: Update user profile
      description: Update user's profile information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                preferences:
                  type: object
      responses:
        '200':
          description: Profile updated successfully

  # ========================
  # Voice Generation Routes
  # ========================
  /api/voices/list:
    get:
      tags: [Voice Generation]
      summary: Get available voices
      description: Retrieve all available ElevenLabs voices
      security:
        - BearerAuth: []
        - {}
      responses:
        '200':
          description: Voices retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  voices:
                    type: array
                    items:
                      $ref: '#/components/schemas/Voice'
                  total:
                    type: integer
                  hasMore:
                    type: boolean

  /api/voices/{voiceId}:
    get:
      tags: [Voice Generation]
      summary: Get specific voice details
      description: Retrieve detailed information about a specific voice
      security:
        - BearerAuth: []
        - {}
      parameters:
        - name: voiceId
          in: path
          required: true
          schema:
            type: string
          example: pNInz6obpgDQGcFmaJgB
      responses:
        '200':
          description: Voice details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Voice'

  /api/voices/preview:
    post:
      tags: [Voice Generation]
      summary: Generate voice preview
      description: Generate a short audio preview for a voice
      security:
        - BearerAuth: []
        - {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [voiceId]
              properties:
                voiceId:
                  type: string
                  example: pNInz6obpgDQGcFmaJgB
                text:
                  type: string
                  default: "Hello! This is a preview of this voice."
                  maxLength: 100
      responses:
        '200':
          description: Audio preview generated
          content:
            audio/mpeg:
              schema:
                type: string
                format: binary

  /api/voices/generate-message:
    post:
      tags: [Voice Generation]
      summary: Generate speech for message
      description: Generate speech audio for a specific message
      security:
        - BearerAuth: []
        - {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [messageId, text, voiceId]
              properties:
                messageId:
                  type: string
                  example: msg_123
                text:
                  type: string
                  example: "Hello there! How are you doing today?"
                voiceId:
                  type: string
                  example: pNInz6obpgDQGcFmaJgB
                language:
                  type: string
                  default: en
                speed:
                  type: string
                  enum: [slow, normal, fast]
                  default: normal
                customSettings:
                  $ref: '#/components/schemas/VoiceSettings'
      responses:
        '200':
          description: Speech generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AudioResponse'

  /api/voices/generate-batch:
    post:
      tags: [Voice Generation]
      summary: Generate speech for multiple messages
      description: Batch generate speech for multiple messages
      security:
        - BearerAuth: []
        - {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [messages]
              properties:
                messages:
                  type: array
                  items:
                    type: object
                    required: [id, text, voiceId]
                    properties:
                      id:
                        type: string
                      text:
                        type: string
                      voiceId:
                        type: string
                language:
                  type: string
                  default: en
                speed:
                  type: string
                  default: normal
      responses:
        '200':
          description: Batch speech generation completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  totalMessages:
                    type: integer
                  generatedCount:
                    type: integer
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/AudioResponse'

  /api/voices/generate-voiceover-audio:
    post:
      tags: [Voice Generation]
      summary: Generate voiceover audio
      description: Generate voiceover audio for video content
      security:
        - BearerAuth: []
        - {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [script, selectedVoiceId]
              properties:
                script:
                  type: string
                  example: "Welcome to our amazing product demonstration."
                selectedVoiceId:
                  type: string
                  example: pNInz6obpgDQGcFmaJgB
                stability:
                  type: number
                  minimum: 0
                  maximum: 1
                  example: 0.5
                similarity:
                  type: number
                  minimum: 0
                  maximum: 1
                  example: 0.8
                ownerId:
                  type: string
      responses:
        '200':
          description: Voiceover generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  audio_url:
                    type: string
                  audioKey:
                    type: string
                  voiceId:
                    type: string
                  filename:
                    type: string
                  duration:
                    type: number
                  settings:
                    $ref: '#/components/schemas/VoiceSettings'
                  expiresAt:
                    type: string
                    format: date-time
                  environment:
                    type: string

  /api/voices/test/connection:
    get:
      tags: [Voice Generation]
      summary: Test ElevenLabs connection
      description: Test connectivity to ElevenLabs API
      security:
        - BearerAuth: []
        - {}
      responses:
        '200':
          description: Connection test result
          content:
            application/json:
              schema:
                type: object
                properties:
                  connected:
                    type: boolean
                  timestamp:
                    type: string
                    format: date-time
                  service:
                    type: string
                    example: ElevenLabs

  # ========================
  # Video Generation Routes
  # ========================
  /api/video/generate:
    post:
      tags: [Video Generation]
      summary: Generate video
      description: Start video generation with specified configuration
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [type, input, settings]
              properties:
                type:
                  type: string
                  enum: [story, reddit, quiz, educational, viral-text]
                  example: story
                input:
                  type: object
                  properties:
                    text:
                      type: string
                    script:
                      type: string
                    title:
                      type: string
                    config:
                      type: object
                      description: Enhanced config from frontend
                settings:
                  type: object
                  properties:
                    duration:
                      type: number
                      default: 30
                    width:
                      type: number
                      default: 1080
                    height:
                      type: number
                      default: 1920
                    fps:
                      type: number
                      default: 30
                    voice:
                      type: string
                      default: default
                    background:
                      type: string
                      default: "#000000"
                    language:
                      type: string
                      default: en
                userId:
                  type: string
      responses:
        '200':
          description: Video generation started
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  videoId:
                    type: string
                  status:
                    type: string
                    example: processing
                  message:
                    type: string

  /api/video/status/{videoId}:
    get:
      tags: [Video Generation]
      summary: Check video generation status
      description: Get the current status of video generation
      security: []
      parameters:
        - name: videoId
          in: path
          required: true
          schema:
            type: string
          example: video_1234567890_abc123
      responses:
        '200':
          description: Video status retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  videoId:
                    type: string
                  status:
                    type: string
                    enum: [processing, completed, failed]
                  progress:
                    type: number
                    minimum: 0
                    maximum: 100
                  message:
                    type: string
                  outputPath:
                    type: string
                  sizeInBytes:
                    type: number
                  duration:
                    type: number
                  error:
                    type: string

  /api/video/renders:
    get:
      tags: [Video Generation]
      summary: List rendered videos
      description: Get list of all rendered video files
      security: []
      responses:
        '200':
          description: Rendered videos list
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  renders:
                    type: array
                    items:
                      type: object
                      properties:
                        filename:
                          type: string
                        url:
                          type: string
                        created:
                          type: string
                          format: date-time

  /api/video/download/{filename}:
    get:
      tags: [Video Generation]
      summary: Download video file
      description: Stream/download a rendered video file with range support
      security: []
      parameters:
        - name: filename
          in: path
          required: true
          schema:
            type: string
          example: video_output.mp4
        - name: Range
          in: header
          schema:
            type: string
          example: bytes=0-1023
      responses:
        '200':
          description: Full video file
          content:
            video/mp4:
              schema:
                type: string
                format: binary
        '206':
          description: Partial video content (range request)
          content:
            video/mp4:
              schema:
                type: string
                format: binary
        '404':
          description: Video file not found

  # ========================
  # Asset Management Routes
  # ========================
  /api/assets/videos/backgrounds:
    get:
      tags: [Asset Management]
      summary: List background videos
      description: Get all available background videos from R2 storage
      security: []
      responses:
        '200':
          description: Background videos retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  videos:
                    type: array
                    items:
                      $ref: '#/components/schemas/VideoAsset'

  /api/assets/videos/user/{userId}:
    get:
      tags: [Asset Management]
      summary: List user videos
      description: Get user's uploaded videos from R2 storage
      security: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User videos retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  videos:
                    type: array
                    items:
                      $ref: '#/components/schemas/VideoAsset'

  /api/assets/audio/backgrounds:
    get:
      tags: [Asset Management]
      summary: List background audio
      description: Get all available background audio tracks
      security: []
      responses:
        '200':
          description: Background audio retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  tracks:
                    type: array
                    items:
                      $ref: '#/components/schemas/AudioAsset'

  /api/assets/list/{userId}:
    get:
      tags: [Asset Management]
      summary: List all user assets
      description: Get all assets (video, audio, images) for a user
      security: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
            enum: [video, audio, image, all]
            default: all
      responses:
        '200':
          description: User assets retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  assets:
                    type: array
                    items:
                      $ref: '#/components/schemas/Asset'
                  count:
                    type: integer

  # ========================
  # Text Video Routes
  # ========================
  /api/textVideo/analyze-conversation:
    post:
      tags: [Text Video]
      summary: Analyze conversation for viral potential
      description: AI-powered analysis of conversation messages for viral optimization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [messages, people]
              properties:
                messages:
                  type: array
                  items:
                    type: object
                    properties:
                      text:
                        type: string
                      sender:
                        type: string
                people:
                  type: array
                  items:
                    type: object
                targetDemographic:
                  type: string
                  default: general
      responses:
        '200':
          description: Conversation analysis completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationAnalysis'

  /api/textVideo/generate-viral-script:
    post:
      tags: [Text Video]
      summary: Generate viral conversation script
      description: AI-powered viral script generation for text videos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [prompt, people]
              properties:
                prompt:
                  type: string
                  example: "A surprising discovery at work"
                tone:
                  type: string
                  enum: [casual, dramatic, funny, mysterious, romantic]
                  default: casual
                length:
                  type: string
                  enum: [short, medium, long]
                  default: medium
                scriptType:
                  type: string
                  enum: [story, drama, comedy, romance]
                  default: story
                targetDemographic:
                  type: string
                  default: general
                people:
                  type: array
                  items:
                    type: object
      responses:
        '200':
          description: Viral script generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViralScript'

  /api/textVideo/trending-templates:
    get:
      tags: [Text Video]
      summary: Get trending text video templates
      description: Retrieve trending templates for text video creation
      security: []
      responses:
        '200':
          description: Trending templates retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  templates:
                    type: array
                    items:
                      $ref: '#/components/schemas/VideoTemplate'

  # ========================
  # Caption Routes
  # ========================
  /api/captions:
    get:
      tags: [Captions]
      summary: Get user captions
      description: Retrieve all captions for authenticated user
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - name: status
          in: query
          schema:
            type: string
            enum: [processing, completed, failed]
        - name: language
          in: query
          schema:
            type: string
        - name: search
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Captions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      captions:
                        type: array
                        items:
                          $ref: '#/components/schemas/Caption'
                      pagination:
                        $ref: '#/components/schemas/Pagination'

    post:
      tags: [Captions]
      summary: Create caption from video upload
      description: Upload video file and generate captions
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required: [video]
              properties:
                video:
                  type: string
                  format: binary
                title:
                  type: string
                language:
                  type: string
                  default: en
                settings:
                  type: object
      responses:
        '201':
          description: Caption creation started
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      caption:
                        $ref: '#/components/schemas/Caption'

  # ========================
  # Top 5 Videos Routes
  # ========================
  /api/top5/create:
    post:
      tags: [Top 5 Videos]
      summary: Create Top 5 video project
      description: Create a new Top 5 video project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [title, top5VideosData]
              properties:
                title:
                  type: string
                description:
                  type: string
                top5VideosData:
                  type: object
                settings:
                  type: object
                type:
                  type: string
                  default: top-5-videos
      responses:
        '201':
          description: Top 5 video creation started
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      videoId:
                        type: string
                      status:
                        type: string
                      message:
                        type: string
                      createdAt:
                        type: string
                        format: date-time

  /api/top5/trending/topics:
    get:
      tags: [Top 5 Videos]
      summary: Get trending topics
      description: Retrieve currently trending topics for Top 5 videos
      parameters:
        - name: category
          in: query
          schema:
            type: string
        - name: platform
          in: query
          schema:
            type: string
            enum: [tiktok, instagram, youtube, twitter, all]
            default: all
        - name: timeframe
          in: query
          schema:
            type: string
            enum: [24h, 7d, 30d]
            default: 24h
      responses:
        '200':
          description: Trending topics retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      topics:
                        type: array
                        items:
                          $ref: '#/components/schemas/TrendingTopic'

  /api/top5/analysis/viral-potential:
    post:
      tags: [Top 5 Videos]
      summary: Analyze viral potential
      description: Analyze content for viral potential using AI
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [items, targetPlatforms]
              properties:
                items:
                  type: array
                  items:
                    type: object
                targetPlatforms:
                  type: array
                  items:
                    type: string
                targetAudience:
                  type: string
      responses:
        '200':
          description: Viral potential analysis completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ViralAnalysis'

  # ========================
  # Health & Status Routes
  # ========================
  /:
    get:
      tags: [Health]
      summary: API information
      description: Get basic API information and available endpoints
      security: []
      responses:
        '200':
          description: API info retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ReelSpeed Backend API
                  services:
                    type: object
                    properties:
                      voices:
                        type: string
                        example: /api/voices/list
                      video:
                        type: string
                        example: /api/video/generate
                      status:
                        type: string
                        example: /api/video/status/:videoId
                      renders:
                        type: string
                        example: /api/video/renders

  /health:
    get:
      tags: [Health]
      summary: Health check
      description: Check API health and service status
      security: []
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: OK
                  timestamp:
                    type: string
                    format: date-time

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    AuthResponse:
      type: object
      properties:
        success:
          type: boolean
        user:
          $ref: '#/components/schemas/UserProfile'
        tokens:
          $ref: '#/components/schemas/TokenResponse'
        requestId:
          type: string

    TokenResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        expiresIn:
          type: number

    UserProfile:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        avatar:
          type: string
        plan:
          type: string
          enum: [free, pro, enterprise]
        points:
          type: number
        badges:
          type: array
          items:
            type: string
        videosCreated:
          type: number
        preferences:
          type: object
        subscription:
          type: object
        createdAt:
          type: string
          format: date-time

    Voice:
      type: object
      properties:
        voice_id:
          type: string
          example: pNInz6obpgDQGcFmaJgB
        name:
          type: string
          example: Adam
        category:
          type: string
          example: premade
        labels:
          type: object
          properties:
            accent:
              type: string
            age:
              type: string
            gender:
              type: string
            language:
              type: string
            use_case:
              type: string
        description:
          type: string
        preview_url:
          type: string
        available_for_tiers:
          type: array
          items:
            type: string
        settings:
          $ref: '#/components/schemas/VoiceSettings'

    VoiceSettings:
      type: object
      properties:
        stability:
          type: number
          minimum: 0
          maximum: 1
          example: 0.5
        similarity_boost:
          type: number
          minimum: 0
          maximum: 1
          example: 0.8
        style:
          type: number
          minimum: 0
          maximum: 1
          example: 0.0
        use_speaker_boost:
          type: boolean
          example: true

    AudioResponse:
      type: object
      properties:
        success:
          type: boolean
        messageId:
          type: string
        audioUrl:
          type: string
        audioKey:
          type: string
        voiceId:
          type: string
        filename:
          type: string
        duration:
          type: number
        settings:
          $ref: '#/components/schemas/VoiceSettings'
        expiresAt:
          type: string
          format: date-time

    VideoAsset:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        category:
          type: string
          enum: [background, custom]
        videoUrl:
          type: string
        size:
          type: number
        duration:
          type: number
        uploadedAt:
          type: string
          format: date-time
        isPublic:
          type: boolean

    AudioAsset:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        category:
          type: string
          enum: [background, custom]
        url:
          type: string
        size:
          type: number
        duration:
          type: number
        uploadedAt:
          type: string
          format: date-time
        isPublic:
          type: boolean

    Asset:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [video, audio, image]
        url:
          type: string
        size:
          type: number
        uploadedAt:
          type: string
          format: date-time
        isPublic:
          type: boolean

    ConversationAnalysis:
      type: object
      properties:
        success:
          type: boolean
        analysis:
          type: object
          properties:
            conversationMetadata:
              type: object
              properties:
                totalMessages:
                  type: integer
                avgMessageLength:
                  type: number
                conversationFlow:
                  type: string
                emotionalArc:
                  type: string
                viralScore:
                  type: number
                  minimum: 0
                  maximum: 100
                engagementPrediction:
                  type: number
                targetDemographic:
                  type: string
                contentTags:
                  type: array
                  items:
                    type: string
                difficultyLevel:
                  type: string
                  enum: [beginner, intermediate, advanced]
                aiGenerated:
                  type: boolean
            suggestions:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  message:
                    type: string
                  example:
                    type: string
            optimization:
              type: object
              properties:
                recommendedChanges:
                  type: integer
                potentialViralIncrease:
                  type: number
                bestPerformingSegment:
                  type: integer
                engagementHotspots:
                  type: array
                  items:
                    type: object

    ViralScript:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            messages:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  text:
                    type: string
                  sender:
                    type: string
                  delay:
                    type: number
                  emotions:
                    type: array
                    items:
                      type: string
                  reactions:
                    type: array
            title:
              type: string
            people:
              type: array
            conversationMetadata:
              type: object
            template:
              type: object
            viralElements:
              type: array
              items:
                type: string

    VideoTemplate:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        category:
          type: string
        viralScore:
          type: number
        tags:
          type: array
          items:
            type: string
        preview:
          type: object
          properties:
            messages:
              type: integer
            avgEngagement:
              type: string
            platforms:
              type: array
              items:
                type: string

    Caption:
      type: object
      properties:
        _id:
          type: string
        userId:
          type: string
        videoId:
          type: string
        title:
          type: string
        language:
          type: string
        status:
          type: string
          enum: [processing, completed, failed]
        lines:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              start:
                type: number
              end:
                type: number
              text:
                type: string
              confidence:
                type: number
              speaker:
                type: string
        totalDuration:
          type: number
        style:
          type: object
        settings:
          type: object
        createdAt:
          type: string
          format: date-time
        analytics:
          type: object
          properties:
            viewCount:
              type: number
            editCount:
              type: number
            exportCount:
              type: number
            lastAccessed:
              type: string
              format: date-time

    Pagination:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        totalPages:
          type: integer

    TrendingTopic:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        category:
          type: string
        popularity:
          type: number
        growth:
          type: number
        platforms:
          type: array
          items:
            type: string
        hashtags:
          type: array
          items:
            type: string
        suggestedAngles:
          type: array
          items:
            type: string

    ViralAnalysis:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            overallViralScore:
              type: number
            platformScores:
              type: object
            strengths:
              type: array
              items:
                type: string
            weaknesses:
              type: array
              items:
                type: string
            recommendations:
              type: array
              items:
                type: object
            competitorAnalysis:
              type: object
            marketGaps:
              type: array
              items:
                type: string

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string
              code:
                type: string
              requestId:
                type: string

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string
                example: Unauthorized
              code:
                type: string
                example: UNAUTHORIZED

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string
                example: Resource not found
              code:
                type: string
                example: NOT_FOUND

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string
                example: Internal server error
              details:
                type: string

tags:
  - name: Authentication
    description: User authentication and authorization
  - name: Voice Generation
    description: ElevenLabs voice generation and management
  - name: Video Generation
    description: Video creation and processing
  - name: Asset Management
    description: S3/R2 asset storage and retrieval
  - name: Text Video
    description: Text-based viral video creation
  - name: Captions
    description: Video caption generation and management
  - name: Top 5 Videos
    description: Top 5 content creation and optimization
  - name: Health
    description: System health and status checks