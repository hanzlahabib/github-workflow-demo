{
  "timestamp": "2025-07-21T10:28:34.016Z",
  "summary": {
    "total": 7,
    "passed": 7,
    "failed": 0
  },
  "results": [
    {
      "name": "Service File Structure",
      "passed": true,
      "message": "Services: 6/6, Configs: 2/2",
      "services": [
        {
          "service": "cache.ts",
          "exists": true,
          "path": "/home/hanzla/development/reelspeed/reelspeed-backend/src/services/cache.ts"
        },
        {
          "service": "elevenlabs.ts",
          "exists": true,
          "path": "/home/hanzla/development/reelspeed/reelspeed-backend/src/services/elevenlabs.ts"
        },
        {
          "service": "openai.ts",
          "exists": true,
          "path": "/home/hanzla/development/reelspeed/reelspeed-backend/src/services/openai.ts"
        },
        {
          "service": "remotion.ts",
          "exists": true,
          "path": "/home/hanzla/development/reelspeed/reelspeed-backend/src/services/remotion.ts"
        },
        {
          "service": "videoService.ts",
          "exists": true,
          "path": "/home/hanzla/development/reelspeed/reelspeed-backend/src/services/videoService.ts"
        },
        {
          "service": "index.ts",
          "exists": true,
          "path": "/home/hanzla/development/reelspeed/reelspeed-backend/src/services/index.ts"
        }
      ],
      "configs": [
        {
          "config": "centralized.ts",
          "exists": true,
          "path": "/home/hanzla/development/reelspeed/reelspeed-backend/src/config/centralized.ts"
        },
        {
          "config": "services.ts",
          "exists": true,
          "path": "/home/hanzla/development/reelspeed/reelspeed-backend/src/config/services.ts"
        }
      ],
      "timestamp": "2025-07-21T10:28:34.013Z"
    },
    {
      "name": "Service Imports",
      "passed": true,
      "message": "3/3 service imports working",
      "imports": [
        {
          "file": "config/centralized.ts",
          "exists": true,
          "hasExports": true,
          "hasConfig": true
        },
        {
          "file": "services/cache.ts",
          "exists": true,
          "hasExports": true,
          "hasClass": true
        },
        {
          "file": "services/index.ts",
          "exists": true,
          "hasExports": true,
          "hasImports": true
        }
      ],
      "timestamp": "2025-07-21T10:28:34.013Z"
    },
    {
      "name": "Configuration System",
      "passed": true,
      "message": "2 configuration files working",
      "configs": [
        {
          "file": "centralized.ts",
          "exists": true,
          "hasEnvironmentVars": false,
          "hasDefaults": false,
          "hasValidation": true
        },
        {
          "file": "services.ts",
          "exists": true,
          "hasServiceConfigs": true,
          "hasExports": true
        }
      ],
      "timestamp": "2025-07-21T10:28:34.014Z"
    },
    {
      "name": "Cache Implementation",
      "passed": true,
      "message": "Cache implementation: 7/7 features",
      "features": {
        "hasClass": true,
        "hasGet": true,
        "hasSet": true,
        "hasDelete": true,
        "hasExpiration": true,
        "hasMemoryCache": true,
        "hasRedisSupport": true
      },
      "timestamp": "2025-07-21T10:28:34.014Z"
    },
    {
      "name": "Auth Middleware",
      "passed": true,
      "message": "Auth middleware: 6/6 features",
      "features": {
        "hasJWTVerification": true,
        "hasAuthMiddleware": true,
        "hasErrorHandling": true,
        "hasUserExtraction": true,
        "hasTokenValidation": true,
        "hasUnauthorizedResponse": true
      },
      "timestamp": "2025-07-21T10:28:34.014Z"
    },
    {
      "name": "Code Quality",
      "passed": true,
      "message": "Code quality: 7 issues found",
      "details": {
        "duplicateCode": 0,
        "longFunctions": 3,
        "complexityIssues": 0,
        "missingErrorHandling": 4
      },
      "timestamp": "2025-07-21T10:28:34.015Z"
    },
    {
      "name": "Build Compatibility",
      "passed": true,
      "message": "Build compatibility: tsconfig(true), package.json(true), scripts(true)",
      "scripts": {
        "start": "node dist/index.js",
        "dev": "nodemon src/index.ts",
        "test-server": "npx ts-node src/test-server.ts",
        "build": "tsc",
        "lint": "eslint src --ext .ts",
        "lint:fix": "eslint src --ext .ts --fix",
        "test": "echo \"Error: no test specified\" && exit 1"
      },
      "timestamp": "2025-07-21T10:28:34.015Z"
    }
  ]
}