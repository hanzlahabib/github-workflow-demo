name: web test

on:
  pull_request:
    paths:
      - web/**
    branches:
      - main

  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: web/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Set publishing config
        run: pnpm config set '//npm.pkg.github.com/:_authToken' "${NODE_AUTH_TOKEN}"
        working-directory: web
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PACKAGES_TOKEN }}

      - name: Install dependencies
        run: pnpm install
        working-directory: web

      - name: Run ESLint
        run: pnpm run lint
        working-directory: web

      - name: Set up reviewdog
        uses: reviewdog/action-setup@v1

      - name: Lint with reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pnpm --silent run lint:ci | reviewdog -f=eslint -reporter=github-pr-check
        working-directory: web

      - name: Build the project
        run: pnpm run build
        working-directory: web
